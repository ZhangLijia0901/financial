<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.financial.user.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.financial.user.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="VARCHAR"/>
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="register_ip" property="registerIp" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, nick_name, avatar_url, NAME, idcard, sex, birthday, nation, mobile, email, address, 
    STATUS, register_time, register_ip, login_time, login_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.financial.user.model.User" >
    insert into user (id, nick_name, avatar_url, 
      NAME, idcard, sex, birthday, 
      nation, mobile, email, address, 
      STATUS, register_time, register_ip, 
      login_time, login_ip)
    values (#{id,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{nation,jdbcType=VARCHAR}, #{mobile,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{registerTime,jdbcType=TIMESTAMP}, #{registerIp,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{loginIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.financial.user.model.User" keyColumn="id" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="registerIp != null" >
        register_ip,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR}
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.financial.user.model.User" >
    update user
    <set >
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="nation != null" >
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR}
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null" >
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.financial.user.model.User" >
    update user
    set nick_name = #{nickName,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      nation = #{nation,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectList" parameterType="com.financial.user.model.User" resultMap="BaseResultMap">
    select  * 
    from    user
    <where>
        <if test="id!=null and id!=''">
            and id = #{id}
        </if>
        <if test="nickName!=null and nickName!=''">
            and nick_name like concat('%', #{nickName}, '%')
        </if>
        <if test="mobile!=null and mobile!=''">
            and mobile like concat('%', #{mobile} ,'%')
        </if>
    </where>
  </select>
</mapper>